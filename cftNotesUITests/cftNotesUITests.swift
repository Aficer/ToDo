//
//  cftNotesUITests.swift
//  cftNotesUITests
//
//  Created by –í–∞–¥–∏–º –≠—Ñ–∏—Å on 31.01.2023.
//

import XCTest

class cftNotesUITests: XCTestCase {
    var app: XCUIApplication!
    
    override func setUpWithError() throws {
        // Put setup code here. This method is called before the invocation of each test method in the class.
        try super.setUpWithError()
        
        app = XCUIApplication()
        app.launch()
        // In UI tests it is usually best to stop immediately when a failure occurs.
        continueAfterFailure = false

        // In UI tests it‚Äôs important to set the initial state - such as interface orientation - required for your tests before they run. The setUp method is a good place to do this.
    }

    override func tearDownWithError() throws {
        try super.tearDownWithError()
        app.terminate()
        // Put teardown code here. This method is called after the invocation of each test method in the class.
    }

    func testExample() throws {

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º 1 –≤—å—é
        //–ù–∞—Ö–æ–¥–∏–º NaviganionBar, –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ
        let todoNavigationBar = app.navigationBars["ToDo üë©‚Äçüíª"]
        XCTAssertTrue(todoNavigationBar.exists)
        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É  Edit, –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–∫–∏ Done
        app.navigationBars["ToDo üë©‚Äçüíª"].buttons["Edit"].tap()
        let doneButton = app.buttons["Done"]
        XCTAssertTrue(doneButton.exists)
        app.navigationBars["ToDo üë©‚Äçüíª"].buttons["Done"].tap()
        //–ò—â–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É –î–æ–±–∞–≤–∏—Ç—å
        let addButton = app.buttons["–î–æ–±–∞–≤–∏—Ç—å"]
        XCTAssertTrue(addButton.exists)
        //–ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ AddView –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
        app.navigationBars["ToDo üë©‚Äçüíª"].buttons["–î–æ–±–∞–≤–∏—Ç—å"].tap()
        let button1 = app.buttons["–°–û–•–†–ê–ù–ò–¢–¨"]
        XCTAssertTrue(button1.exists)
        //–ù–∞—Ö–æ–¥–∏–º textField –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ –∏ –Ω–∞–∂–∏–º–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å - –æ–∂–∏–¥–∞–µ–º —É–≤–∏–¥–µ—Ç—å alert
        let textField1 = app.scrollViews["–î–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É"].otherElements.textFields["–ù–∞–ø–∏—à–∏ —á—Ç–æ –Ω–∏–±—É–¥—å..."]
        XCTAssertTrue(textField1.exists)
        app.buttons["–°–û–•–†–ê–ù–ò–¢–¨"].tap()
        //–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ alerta
        let alert = app.alerts["–ù—É–∂–Ω–æ –±–æ–ª—å—à–µ –±—É–∫–≤!"]
        XCTAssertTrue(alert.exists)
        app.buttons["OK"].tap()
        
        


    }

    func testLaunchPerformance() throws {
        if #available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 7.0, *) {
            // This measures how long it takes to launch your application.
            measure(metrics: [XCTApplicationLaunchMetric()]) {
                XCUIApplication().launch()
            }
        }
    }
}
